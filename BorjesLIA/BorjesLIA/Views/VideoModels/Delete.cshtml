@model BorjesLIA.Models.Video.VideoModel

@{
    ViewBag.Title = "Delete";
}
<body class="nav-md">
    <div class="container-dashboard body">
        <div class="main_container">
            <div class="col-md-3 left_col">
                <div class="left_col scroll-view">
                    @Html.Partial("_AdminPanel")
                </div>
            </div>
            <div class="right_col" role="main">
                <h2>Delete</h2>

                <h3>Are you sure you want to delete this?</h3>
                <div>
                    <h4>VideoModel</h4>
                    <hr />
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Url)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Url)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Name)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Name)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Date)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Date)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.PlacingOrder)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.PlacingOrder)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Active)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Active)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Type)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Type)
                        </dd>


                    </dl>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-actions no-color">
                            <input type="submit" value="Delete" class="btn btn-default" /> |
                            @Html.ActionLink("Back to List", "Index")
                        </div>
                    }
                </div>

                <div id="getProp" data-prop="@Html.DisplayFor(model => model.ID)"></div>

                <section id="show-result-box" class="hidden">
                    <iframe width="560"
                            height="315"
                            id="myVideoID"
                            src=""
                            frameborder="0"
                            allowfullscreen></iframe>

                </section>
                <section id="show-video-result-box" class="hidden">
                    <video controls width="560" height="315" id="videoID">
                        <source src="" type="video/mp4">
                    </video>
                </section>
</div>
        </div>
    </div>



    <script>
        $(document).ready(function () {
            //ger yt vad den behöver
            var tag = document.createElement('script');
            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            var player;

            //Skaffa property
            var propID = document.getElementById('getProp');
            var prop = propID.getAttribute('data-prop');
            //skickar in id för att hämta rätt url
            $.ajax({
                type: "POST",
                url: "/VideoModels/CallJsShowVideo",
                traditional: true,
                data: {
                    videoID: prop,
                }
            }).done(function (data) {
                //får tillbaka url
                if (data.success === true) {
                    var getString = data.returnData;
                    var checkOne = getString.includes("Content/videos");
                    var checkTwo = getString.includes("youtube");
                    var checkThree = getString.includes("vimeo");
                    //on video är lokal
                    if (checkOne) {
                        $('#show-video-result-box').removeClass('hidden');
                        $('#videoID').attr("src", data.returnData);

                  
                    }
                        // om video är yt
                    else if (checkTwo) {
                        //Skapa spelare med API för att kunna ta ut duration
                        $('#show-result-box').removeClass('hidden');
                        $('#myVideoID').attr("src", data.returnData);
                        player = new YT.Player('myVideoID', {
                            events: {
                                'onReady': onPlayerReady
                            }
                        });
                    }
                    else if (checkThree) {
                        $('#myVideoID').attr("src", data.returnData);
                        $('#show-result-box').removeClass('hidden');
                    }
                } else {
                    alert(data.errorMessage)
                    //location.reload();
                }
            }).fail(function (e) {
                alert('Fail. Cannot show video at this time')
                //location.reload();
            });
            function onPlayerReady(event) {

                //event.target.playVideo();
            }
        });
    </script>
</body>