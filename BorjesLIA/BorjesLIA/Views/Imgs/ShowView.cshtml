@model BorjesLIA.ViewModel.ImagesViewModel

<!--cropper script-->
@Scripts.Render("~/Scripts/jcrop/jquery.form.js")
@Scripts.Render("~/Scripts/jcrop/jquery.Jcrop.js")
@Styles.Render("~/Scripts/jcrop/jquery.Jcrop.css")
@Styles.Render("~/Scripts/jcrop/site.avatar.css")
<!--cropper script end-->
@{
    //Bestämmer format på bilden som ska laddas upp.
    int width = 1920;
    int height = 1080;
}

<div class="col-md-12 col-sm-12 col-xs-12 pull-left">
    <div class="x_panel">
        <div class="x_title">
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                </li>
                <li>
                    <a class="close-link"><i class="fa fa-close"></i></a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="col-md-4 col-sm-12 col-xs-12">

            <!--cropper-->
            <script>
                // Detta är scriptet som ligger i site.avatar.
                // Jag har kopierat det på detta sätt för att enklare kunna sätta storlekar via C#-variabler.

                var jcrop_api,
                boundx,
                boundy,
                xsize,
                ysize;

                // ToDo - change the size limit of the file. You may need to change web.config if larger files are necessary.
                var maxSizeAllowed = 10;     // Upload limit in MB
                var maxSizeInBytes = maxSizeAllowed * 1024 * 1024;
                var keepUploadBox = false;  // ToDo - Remove if you want to keep the upload box
                var keepCropBox = false;    // ToDo - Remove if you want to keep the crop box

                $(function () {
                    if (typeof $('#avatar-upload-form') !== undefined) {
                        initAvatarUpload();
                        $('#avatar-max-size').html(maxSizeAllowed);
                        $('#avatar-upload-form input:file').on("change", function (e) {
                            var files = e.currentTarget.files;
                            for (var x in files) {
                                if (files[x].name != "item" && typeof files[x].name != "undefined") {
                                    if (files[x].size <= maxSizeInBytes) {
                                        // Submit the selected file
                                        $('#avatar-upload-form .upload-file-notice').removeClass('bg-danger');
                                        $('#avatar-upload-form').submit();
                                    } else {
                                        // File too large
                                        $('#avatar-upload-form .upload-file-notice').addClass('bg-danger');
                                    }
                                }
                            }
                        });
                    }
                });

                function initAvatarUpload() {
                    $('#avatar-upload-form').ajaxForm({
                        beforeSend: function () {
                            updateProgress(0);
                            $('#avatar-upload-form').addClass('hidden');
                        },
                        uploadProgress: function (event, position, total, percentComplete) {
                            updateProgress(percentComplete);
                        },
                        success: function (data) {
                            updateProgress(100);
                            if (data.success === false) {
                                $('#status').html(data.errorMessage);
                            } else {
                                $('#preview-pane .preview-container img').attr('src', data.fileName);
                                var img = $('#crop-avatar-target');
                                img.attr('src', data.fileName);

                                if (!keepUploadBox) {
                                    $('#avatar-upload-box').addClass('hidden');
                                }
                                $('#avatar-crop-box').removeClass('hidden');
                                initAvatarCrop(img);
                            }
                        },
                        complete: function (xhr) {
                        }
                    });
                }

                function updateProgress(percentComplete) {
                    $('.upload-percent-bar').width(percentComplete + '%');
                    $('.upload-percent-value').html(percentComplete + '%');
                    if (percentComplete === 0) {
                        $('#upload-status').empty();
                        $('.upload-progress').removeClass('hidden');
                    }
                }

                function initAvatarCrop(img) {
                    img.Jcrop({
                        onChange: updatePreviewPane,
                        onSelect: updatePreviewPane,
                        aspectRatio: xsize / ysize
                    }, function () {
                        var bounds = this.getBounds();
                        boundx = bounds[0];
                        boundy = bounds[1];

                        jcrop_api = this;
                        jcrop_api.setOptions({ allowSelect: true });
                        jcrop_api.setOptions({ allowMove: true });
                        jcrop_api.setOptions({ allowResize: true });
                        jcrop_api.setOptions({ aspectRatio: 1.78 });

                        // Maximise initial selection around the centre of the image,
                        // but leave enough space so that the boundaries are easily identified.
                        var padding = 10;
                        var shortEdge = (boundx < boundy ? boundx : boundy) - padding;
                        var longEdge = boundx < boundy ? boundy : boundx;
                        var xCoord = longEdge / 2 - shortEdge / 2;
                        jcrop_api.animateTo([xCoord, padding, shortEdge, shortEdge]);

                        var pcnt = $('#preview-pane .preview-container');
                        xsize = @width;
                        ysize = @height;
                        $('#preview-pane').appendTo(jcrop_api.ui.holder);
                        jcrop_api.focus();
                    });
                }

                function updatePreviewPane(c) {
                    if (parseInt(c.w) > 0) {
                        var rx = xsize / c.w;
                        var ry = ysize / c.h;

                        $('#preview-pane .preview-container img').css({
                            width: Math.round(rx * boundx) + 'px',
                            height: Math.round(ry * boundy) + 'px',
                            marginLeft: '-' + Math.round(rx * c.x) + 'px',
                            marginTop: '-' + Math.round(ry * c.y) + 'px'
                        });
                    }
                }

                function saveAvatar(sorter,altt) {
                    var elemName = document.getElementById("getImageName");
                    var elemPlacingORder = document.getElementById("getPlacingORder");
                    if(elemName.value == 'Bildens namn'){
                        elemName.value = 'NN';
                    }
                    if(elemPlacingORder.value == 'Numerisk placering'){
                        elemPlacingORder.value = 9;
                    }
                    var img = $('#preview-pane .preview-container img');
                    $('#avatar-crop-box button').addClass('disabled');
                    $.ajax({
                        type: "POST",
                        url: "/Imgs/SaveSingleImage",
                        traditional: true,
                        data: {
                            w: img.css('width'),
                            h: img.css('height'),
                            l: img.css('marginLeft'),
                            t: img.css('marginTop'),
                            avatarW: @width,
                            avatarH: @height,
                            fileName: img.attr('src'),
                            imgName: elemName.value,
                            placingOrder: elemPlacingORder.value,
                        }
                    }).done(function (data) {
                        if (data.success === true) {

                            $('#avatar-result img').attr('src', data.avatarFileLocation);

                            $('#show-result-box').removeClass('hidden');

                            if (!keepCropBox) {
                                $('#avatar-crop-box').addClass('hidden');
                            }
                            location.reload();
                        } else {
                            alert(data.errorMessage),
                            location.reload();
                        }
                    }).fail(function (e) {
                        alert('Cannot upload avatar at this time'),
                        location.reload();
                    });
                }

                function reloadPage() {
                    location.reload();
                }
            </script>

            <!--Ajax.BeginForm-->
            <section id="avatar-upload-box">
                @using (Ajax.BeginForm("ShowView", "Imgs", new AjaxOptions() { HttpMethod = "GET" }, new { enctype = "multipart/form-data", id = "avatar-upload-form" }))
            {
                    @Html.AntiForgeryToken()
                    <input type="file" name="files" class="btn btn-default" /><br>
                    <input type="hidden" name="avatarH" value=@height />
                    <input type="hidden" name="avatarW" value=@width />
                    <div class="upload-file-notice">
                        Maximum Size: <span id="avatar-max-size"></span> MB
                    </div>
                }
                <div class="upload-progress col-md-6 hidden">
                    <div class="upload-percent-value pull-left">0%</div>
                    <div class="upload-percent-bar pull-left"></div>
                </div>
                <div id="upload-status"></div>
            </section>
            <section id="avatar-crop-box" class="hidden">
                <p>
                    <img src="" id="crop-avatar-target" alt="Uploaded image" style="max-width: 500px;" />
                    <div id="preview-pane" class="hidden">
                        <div class="preview-container">
                            <img src="" class="jcrop-preview" alt="Preview" />
                        </div>
                    </div>
                </p>
                <div class="row">
                    <span><input type="text" name="imgName" id="getImageName" value="Bildens namn" /></span><br />
                    <span><input type="text" name="placingOrder" id="getPlacingORder" value="Numerisk placering" /></span><br />
                </div>
                <div class="row">
                    <span>Bilden skalas om enligt @width <text>x</text> @height pixlar.</span><br />
                    <span>Notera: Om originalbilden är mindre än denna upplösning kommer bilden att förstoras och skalas om till @width <text>x</text> @height och kan därför tappa lite i bildkvalité.</span><br />
                </div>
                <p>&nbsp;</p>
                <p><button class="btn btn-default" onclick="saveAvatar()">Spara bild</button><button class="btn btn-default" onclick="reloadPage()">Avbryt</button></p>
               

            </section>
            <div id="avatar-result" class="hidden">
                <img src="" alt="Final Image" />
            </div>
            <div id="show-result-box" class="hidden">
                <div class="alert-success">
                    <p>Bilden laddades upp korrekt</p>
                </div>
            </div> <!--cropper end-->

        </div>

        <div>
            <div id="imgList">
                @Html.Partial("_ImagesList", Model)
            </div>
        </div>

        <!-- Datatable starts here -->
        <div class="col-md-8 col-sm-12 col-xs-12">
            @*<div id="imgList">
                    @Html.Partial("_ImagesList", Model)
                </div>*@
        </div>
    </div>
</div>
